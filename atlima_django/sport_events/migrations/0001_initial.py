# Generated by Django 3.2.15 on 2022-08-13 20:18

from django.db import migrations, models
import django.db.models.deletion
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('money', '0001_initial'),
        ('ipsc', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='events')),
                ('address', models.CharField(blank=True, max_length=4096, null=True)),
                ('start_event_date', models.DateField(blank=True, null=True)),
                ('end_event_date', models.DateField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('site', models.CharField(blank=True, max_length=512, null=True)),
                ('status', models.CharField(blank=True, choices=[('Draft', 'DRAFT'), ('Publish', 'PUBLISH'), ('Deleted', 'DELETED')], default='Draft', max_length=32, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('registration_opened', models.BooleanField(default=False)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=17, null=True)),
                ('standart_speed_courses', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=512, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('has_results', models.BooleanField(default=False)),
                ('imported', models.BooleanField(default=False)),
                ('dismissed', models.BooleanField(default=False)),
                ('dismiss_reason', models.CharField(blank=True, max_length=4096, null=True)),
                ('moderated', models.BooleanField(default=False)),
                ('banned', models.BooleanField(blank=True, default=None, null=True)),
                ('banned_moderation', models.BooleanField(default=False)),
                ('freezed', models.BooleanField(default=False)),
                ('first_calculation_datetime', models.DateTimeField(blank=True, null=True)),
                ('last_calculation_datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventEVSKStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regional_status', models.IntegerField(blank=True, choices=[(1, 'Regional'), (2, 'Federal')], default=1, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventEVSKStatusTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'event evsk status Translation',
                'db_table': 'sport_events_eventevskstatus_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventFormatTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'event format Translation',
                'db_table': 'sport_events_eventformat_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_level', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('squads_amount', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('shooters_in_squad', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('prematch', models.BooleanField(default=False)),
                ('standart_speed_courses', models.BooleanField(default=False)),
                ('number_in_calendar_plan', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'event Translation',
                'db_table': 'sport_events_event_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_price', models.PositiveBigIntegerField()),
                ('participant_group', models.CharField(blank=True, max_length=32, null=True)),
                ('participant_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('category', models.IntegerField(choices=[(1, 'Super Junior'), (2, 'Junior'), (3, 'Senior'), (4, 'Super Senior'), (5, 'Lady'), (6, 'Regular')], default=6)),
                ('power_factor', models.IntegerField(choices=[(1, 'Minor'), (2, 'Major')], default=1)),
                ('active', models.BooleanField(default=False, verbose_name='Active')),
                ('paid', models.BooleanField(default=False)),
                ('dont_include_in_rating_calculation', models.BooleanField(default=False)),
                ('percentage', models.FloatField(default=0)),
                ('stage_points', models.FloatField(default=0)),
                ('initial_rating', models.IntegerField(blank=True, default=0, null=True)),
                ('deviation', models.FloatField(blank=True, default=0, null=True)),
                ('handicap', models.FloatField(blank=True, default=0, null=True)),
                ('performance', models.FloatField(blank=True, default=0, null=True)),
                ('rating_increase', models.FloatField(blank=True, default=0, null=True)),
                ('points', models.FloatField(blank=True, default=0, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='currency_for_slot', to='money.currency')),
                ('discipline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ipsc.discipline')),
                ('promocode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promocode_user_for_slot', to='money.promocode')),
                ('raw_results', models.ManyToManyField(to='ipsc.AggregatedCourseResultForSlot')),
                ('squad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='slot_squad_ref', to='ipsc.squad')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ipsc.team')),
            ],
        ),
    ]
